//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using Microsoft.Extensions.Configuration;

namespace Recipes.Xpo.Entities
{
    public partial class OrmCookbookUnitOfWork : UnitOfWork
    {
        public OrmCookbookUnitOfWork() : base() { }
        public OrmCookbookUnitOfWork(DevExpress.Xpo.Metadata.XPDictionary dictionary) : base(dictionary) { }
        public OrmCookbookUnitOfWork(IDataLayer layer, params IDisposable[] disposeOnDisconnect) : base(layer, disposeOnDisconnect) { }
        public OrmCookbookUnitOfWork(IObjectLayer layer, params IDisposable[] disposeOnDisconnect) : base(layer, disposeOnDisconnect) { }
    }
}
//namespace Microsoft.Extensions.DependencyInjection {
//    public static class OrmCookbookXpoServiceCollectionExtensions {
//        public static IServiceCollection AddOrmCookbookAsXpoDefaultUnitOfWork(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultUnitOfWork(useDataLayerAsSingletone, optionsBuilder);
//        }
//        public static IServiceCollection AddOrmCookbookAsXpoDefaultSession(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultSession(useDataLayerAsSingletone, optionsBuilder);
//        }
//        public static IServiceCollection AddOrmCookbookUnitOfWork(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoCustomSession<OrmCookbookUnitOfWork>(useDataLayerAsSingletone, optionsBuilder);
//        }
//        public static IServiceCollection AddOrmCookbookXpoDefaultDataLayer(this IServiceCollection serviceCollection, ServiceLifetime lifetime, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultDataLayer(lifetime, customDataLayerOptionsBuilder);
//        }
//        public static IServiceCollection AddOrmCookbookAsXpoDefaultUnitOfWork(this IServiceCollection serviceCollection, IConfiguration configuration, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultUnitOfWork(useDataLayerAsSingletone, o => { o.UseConnectionStringForOrmCookbook(configuration); optionsBuilder(o); });
//        }
//        public static IServiceCollection AddOrmCookbookAsXpoDefaultSession(this IServiceCollection serviceCollection, IConfiguration configuration, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultSession(useDataLayerAsSingletone, o => { o.UseConnectionStringForOrmCookbook(configuration); optionsBuilder(o); });
//        }
//        public static IServiceCollection AddOrmCookbookUnitOfWork(this IServiceCollection serviceCollection, IConfiguration configuration, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoCustomSession<OrmCookbookUnitOfWork>(useDataLayerAsSingletone, o => { o.UseConnectionStringForOrmCookbook(configuration); optionsBuilder(o); });
//        }
//        public static IServiceCollection AddOrmCookbookXpoDefaultDataLayer(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime lifetime, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null) {
//            Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
//            return serviceCollection.AddXpoDefaultDataLayer(lifetime, o => { o.UseConnectionStringForOrmCookbook(configuration); optionsBuilder(o); });
//        }
//        public static DataLayerOptionsBuilder UseConnectionStringForOrmCookbook(this DataLayerOptionsBuilder options, IConfiguration configuration) {
//            return options.UseConnectionString(configuration.GetConnectionString(ConnectionHelper.ConnectionStringName));
//        }
//        static Action<DataLayerOptionsBuilder> CreateDataLayerOptionsBuilder(Action<DataLayerOptionsBuilder> injectCustomDataLayerOptionsBuilder) {
//            return (options) => {
//                options
//                .UseEntityTypes(ConnectionHelper.GetPersistentTypes())
//                .UseEntityTypes(ConnectionHelper.GetNonPersistentTypes());
//                if(injectCustomDataLayerOptionsBuilder != null) {
//                    injectCustomDataLayerOptionsBuilder(options);
//                }
//            };
//        }
//    }
//}
