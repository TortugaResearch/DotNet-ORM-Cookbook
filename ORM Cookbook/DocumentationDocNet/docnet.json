{
  "Name": "The .NET Core ORM Cookbook",
  "Source": ".",
  "Destination": "..\\..\\docs",
  "IncludeSource": "Includes",
  "Theme": "Light",
  "Footer": "The ORM Cookbook. <a href='https://github.com/Grauenwolf/DotNet-ORM-Cookbook' target='_blank'>Visit us at GitHub</a>.",
  "ConvertLocalLinks": "true",
  "Pages": {
    "__index": "index.md",
    "ORMs": {
      "ADO.NET": "ADO.md",
      "Chain": "Chain.md",
      "Dapper": "Dapper.md",
      "DbConnector": "DbConnector.md",
      "Entity Framework 6": "EF6.md",
      "Entity Framework Core": "EFCore.md",
      "LINQ to DB": "LinqToDB.md",
      "LLBLGen Pro": "LLBLGenPro.md",
      "NHibernate": "NHibernate.md",
      "RepoDb": "RepoDb.md",
      "ServiceStack": "ServiceStack.md",
      "XPO": "XPO.md"
    },
    "FAQ": "FAQ.md",
    "Standard CRUD scenarios": {
      "Operations on a single entity type": "SingleModelCrud.md",
      "Operations on sets": "MultipleCrud.md",
      "Operations on a graph of multiple entity types": "ModelWithChildren.md",
      "Operations on immutable entities": "Immutable.md",
      "Handling failures and exceptions": "TryCrud.md",
      "Operations with a Foreign Key based Lookup Table": {
        "FK Lookup table using an integer-based Foreign Key": "ModelWithLookupSimple.md",
        "FK Lookup table using an object-based Foreign Key": "ModelWithLookupComplex.md"
      }
    },
    "Fetching data scenarios": {
      "Projecting with a Join": "Joins.md",
      "Reading from Views": "Views.md",
      "Row Counts": "RowCount.md",
      "Paging Results": "Pagination.md",
      "Populate DataTable": "PopulateDataTable.md",
      "Reading a Scalar Value from a Row": "ScalarValue.md",
      "Reading a Single Column from a Table": "SingleColumn.md"
    },
    "Advanced scenarios": {
      "Async Operations": "SingleModelCrudAsync.md",
      "Batch Inserts with Large Collections": "LargeBatch.md",
      "Bulk Inserts": "BulkInsert.md",
      "Connection Sharing": "ConnectionSharing.md",
      "Multiple Databases": "MultipleDB.md",
      "Partial Updates": "PartialUpdate.md",
      "Transactions": "Transactions.md",
      "Upsert": "Upsert.md"
    },
    "Sorting scenarios": {
      "Basic Sorting": "Sorting.md",
      "Sorting by Dynamically Chosen Columns": "DynamicSorting.md"
    },
    "Stored procedure scenarios": {
      "Basic Stored Procedures": "BasicStoredProc.md"
    },
    "Auditing and history scenarios": {
      "Audit Columns": "AuditColumns.md",
      "Soft Delete": "SoftDelete.md"
    }
  }
}
